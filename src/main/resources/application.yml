server:
  servlet:
    encoding:
      charset: utf-8
      force: true
  port: 8090

spring:
  # 주석을 해도 안해도 상관x, 설사 틀린내용이라도. 우선순위가 docker-compose내용으로 하기 때문
    datasource:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/cherry_feed
      username: root
      password: '12341234' #PC 1234 , 노트북 12341234
    jpa:
      open-in-view: true
      hibernate:
        ddl-auto: create #update,create
        naming:
          physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy #디폴트 카멜->_ 방식 자동변환
        use-new-id-generator-mappings: false
      #show-sql: true #system.out 콘솔로 출력된다.
      properties:
        hibernate:
          #show_sql: true #하이버네이트가 생성하고 실행하는 SQL을 확인할 수 있다. #system.out 콘솔로 출력된다.
          use_sql_comments: ture
        hibernate.format_sql: true
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    servlet:
      multipart:
        max-file-size: 50MB
        max-request-size: 100MB


jwt:
  token:
    secret: "1q2w3e4r"

logging:
  level:
    org:
      hibernate:
        SQL: DEBUG #하이버네이트가 생성하고 실행하는 SQL을 확인할 수 있다. 로그로
        type:
          descriptor:
            sql: trace #SQL에 바인딩 되는 파라미터를 확인할 수 있다.




